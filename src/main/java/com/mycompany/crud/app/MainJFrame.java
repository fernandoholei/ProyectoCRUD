package com.mycompany.crud.app;

import com.mycompany.crud.config.AppConfig;
import com.mycompany.crud.modelo.Usuario;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import com.mycompany.crud.service.UsuarioService;
import java.io.File;
import java.io.FileOutputStream;
import javax.swing.JFileChooser;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

public class MainJFrame extends javax.swing.JFrame {
    
    private AnnotationConfigApplicationContext context;
    private UsuarioService service;

    public MainJFrame() {
        initComponents();
                
        context = new AnnotationConfigApplicationContext(AppConfig.class);
        service = context.getBean(UsuarioService.class);
        
        tablaEMPLEADOS.setAutoCreateRowSorter(true);
        
        tablaEMPLEADOS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                if(evt.getClickCount() ==2) {
                    int row = tablaEMPLEADOS.getSelectedRow();
                    if (row >= 0) {
                        ID_field.setText(tablaEMPLEADOS.getValueAt(row, 0).toString());
                        COD_EMPLEADO_field.setText(tablaEMPLEADOS.getValueAt(row, 1).toString());
                        DNI_field.setText(tablaEMPLEADOS.getValueAt(row, 2).toString());
                        CARGO_field.setText(tablaEMPLEADOS.getValueAt(row, 3).toString());
                        PRIMER_NOMBRE_field.setText(tablaEMPLEADOS.getValueAt(row, 4).toString());
                        SEGUNDO_NOMBRE_field.setText(tablaEMPLEADOS.getValueAt(row, 5).toString());
                        PRIMER_APELLIDO_field.setText(tablaEMPLEADOS.getValueAt(row, 6).toString());
                        SEGUNDO_APELLIDO_field.setText(tablaEMPLEADOS.getValueAt(row, 7).toString());
                        NOM_USUARIO_field.setText(tablaEMPLEADOS.getValueAt(row, 8).toString());
                        EMAIL_field.setText(tablaEMPLEADOS.getValueAt(row, 9).toString());
                        COD_DEPARTAMENTO_field.setText(tablaEMPLEADOS.getValueAt(row, 10).toString());
                        NOM_DEPARTAMENTO_field.setText(tablaEMPLEADOS.getValueAt(row, 11).toString());
                    }
                }
            }
        });
    }
    
    public void queryReset() {
        
        JTextField[] fields = {ID_field, COD_EMPLEADO_field, DNI_field, CARGO_field, PRIMER_NOMBRE_field, SEGUNDO_NOMBRE_field, PRIMER_APELLIDO_field, SEGUNDO_APELLIDO_field, NOM_USUARIO_field, EMAIL_field, COD_DEPARTAMENTO_field, NOM_DEPARTAMENTO_field};
        
        for (JTextField field : fields)
            field.setText("");       
        }
    
    private void exportTableToExcel(javax.swing.JTable table, String filePath) {
        try (Workbook workbook = new XSSFWorkbook()) {
            Sheet sheet = workbook.createSheet("Empleados");
            
            Row headerRow = sheet.createRow(0);
            for (int col = 0; col < table.getColumnCount(); col++) {
                Cell cell = headerRow.createCell(col);
                cell.setCellValue(table.getColumnName(col));
                sheet.autoSizeColumn(col);  
            }
            
            for (int row = 0; row < table.getRowCount(); row++) {
                Row excelRow = sheet.createRow(row + 1);
                for (int col = 0; col < table.getColumnCount(); col++) {
                    Object value = table.getValueAt(row, col);
                    Cell cell = excelRow.createCell(col);
                    cell.setCellValue(value !=null ? value.toString() : "");
                }
            }
            try (FileOutputStream out = new FileOutputStream(filePath)) {
                workbook.write(out);
            }
            JOptionPane.showMessageDialog(this, "Tabla exportada a: " + filePath);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al exportar los datos: " + e.getMessage());
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ID_field = new javax.swing.JTextField();
        COD_EMPLEADO = new javax.swing.JLabel();
        COD_EMPLEADO_field = new javax.swing.JTextField();
        PRIMER_NOMBRE = new javax.swing.JLabel();
        PRIMER_NOMBRE_field = new javax.swing.JTextField();
        SEGUNDO_NOMBRE = new javax.swing.JLabel();
        SEGUNDO_NOMBRE_field = new javax.swing.JTextField();
        PRIMER_APELLIDO = new javax.swing.JLabel();
        PRIMER_APELLIDO_field = new javax.swing.JTextField();
        SEGUNDO_APELLIDO = new javax.swing.JLabel();
        SEGUNDO_APELLIDO_field = new javax.swing.JTextField();
        NOM_USUARIO = new javax.swing.JLabel();
        NOM_USUARIO_field = new javax.swing.JTextField();
        EMAIL = new javax.swing.JLabel();
        EMAIL_field = new javax.swing.JTextField();
        DNI = new javax.swing.JLabel();
        DNI_field = new javax.swing.JTextField();
        CARGO = new javax.swing.JLabel();
        CARGO_field = new javax.swing.JTextField();
        COD_DEPARTAMENTO = new javax.swing.JLabel();
        COD_DEPARTAMENTO_field = new javax.swing.JTextField();
        NOM_DEPARTAMENTO = new javax.swing.JLabel();
        NOM_DEPARTAMENTO_field = new javax.swing.JTextField();
        btnSALIR = new javax.swing.JButton();
        btnCREAR = new javax.swing.JButton();
        btnCONSULTAR = new javax.swing.JButton();
        btnACTUALIZAR = new javax.swing.JButton();
        btnELIMINAR = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEMPLEADOS = new javax.swing.JTable();
        btnLIMPIAR = new javax.swing.JButton();
        btnEXPORTAR = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("REGISTRO DE EMPLEADOS");

        ID_field.setEditable(false);
        ID_field.setBackground(new java.awt.Color(204, 204, 204));

        COD_EMPLEADO.setText("COD_EMPLEADO");

        COD_EMPLEADO_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                COD_EMPLEADO_fieldActionPerformed(evt);
            }
        });

        PRIMER_NOMBRE.setText("PRIMER_NOMBRE");

        SEGUNDO_NOMBRE.setText("SEGUNDO_NOMBRE");

        PRIMER_APELLIDO.setText("PRIMER_APELLIDO");

        SEGUNDO_APELLIDO.setText("SEGUNDO_APELLIDO");

        NOM_USUARIO.setText("NOM_USUARIO");

        EMAIL.setText("EMAIL");

        DNI.setText("DNI");

        CARGO.setText("CARGO");

        COD_DEPARTAMENTO.setText("COD_DEPARTAMENTO");

        NOM_DEPARTAMENTO.setText("NOM_DEPARTAMENTO");

        btnSALIR.setText("[ X ] SALIR");
        btnSALIR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSALIRActionPerformed(evt);
            }
        });

        btnCREAR.setText("CREAR");
        btnCREAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCREARActionPerformed(evt);
            }
        });

        btnCONSULTAR.setText("CONSULTAR");
        btnCONSULTAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCONSULTARActionPerformed(evt);
            }
        });

        btnACTUALIZAR.setText("ACTUALIZAR");
        btnACTUALIZAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnACTUALIZARActionPerformed(evt);
            }
        });

        btnELIMINAR.setText("ELIMINAR");
        btnELIMINAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnELIMINARActionPerformed(evt);
            }
        });

        tablaEMPLEADOS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "COD_EMPLEADO", "DNI", "CARGO", "PRIMER_NOMBRE", "SEGUNDO_NOMBRE", "PRIMER_APELLIDO", "SEGUNDO_APELLIDO", "NOM_USUARIO", "EMAIL", "COD_DEPARTAMENTO", "NOM_DEPARTAMENTO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaEMPLEADOS.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(tablaEMPLEADOS);
        tablaEMPLEADOS.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnLIMPIAR.setText("LIMPIAR");
        btnLIMPIAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLIMPIARActionPerformed(evt);
            }
        });

        btnEXPORTAR.setText("EXPORTAR");
        btnEXPORTAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEXPORTARActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCREAR, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCONSULTAR, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnACTUALIZAR, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnELIMINAR, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLIMPIAR, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEXPORTAR, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 102, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CARGO_field, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(COD_DEPARTAMENTO)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(COD_DEPARTAMENTO_field, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(NOM_DEPARTAMENTO)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(NOM_DEPARTAMENTO_field))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(SEGUNDO_NOMBRE)
                                                    .addComponent(PRIMER_NOMBRE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(SEGUNDO_NOMBRE_field, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(SEGUNDO_APELLIDO))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(PRIMER_NOMBRE_field, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(PRIMER_APELLIDO)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(PRIMER_APELLIDO_field, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                                    .addComponent(SEGUNDO_APELLIDO_field)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(ID_field, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(19, 19, 19)
                                                .addComponent(COD_EMPLEADO)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(COD_EMPLEADO_field, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(DNI)
                                                .addGap(18, 18, 18)
                                                .addComponent(DNI_field, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(EMAIL)
                                            .addComponent(NOM_USUARIO)
                                            .addComponent(CARGO))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(NOM_USUARIO_field, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(EMAIL_field))))
                        .addContainerGap(122, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSALIR)))
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnSALIR))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ID_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(COD_EMPLEADO)
                    .addComponent(COD_EMPLEADO_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DNI)
                    .addComponent(DNI_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CARGO)
                    .addComponent(CARGO_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PRIMER_NOMBRE)
                    .addComponent(PRIMER_NOMBRE_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PRIMER_APELLIDO)
                    .addComponent(PRIMER_APELLIDO_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NOM_USUARIO)
                    .addComponent(NOM_USUARIO_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SEGUNDO_NOMBRE)
                    .addComponent(SEGUNDO_NOMBRE_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SEGUNDO_APELLIDO)
                    .addComponent(SEGUNDO_APELLIDO_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EMAIL)
                    .addComponent(EMAIL_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(COD_DEPARTAMENTO)
                    .addComponent(COD_DEPARTAMENTO_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NOM_DEPARTAMENTO)
                    .addComponent(NOM_DEPARTAMENTO_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCREAR)
                    .addComponent(btnCONSULTAR)
                    .addComponent(btnACTUALIZAR)
                    .addComponent(btnELIMINAR)
                    .addComponent(btnLIMPIAR)
                    .addComponent(btnEXPORTAR))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void COD_EMPLEADO_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_COD_EMPLEADO_fieldActionPerformed

    }//GEN-LAST:event_COD_EMPLEADO_fieldActionPerformed

    private void btnSALIRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSALIRActionPerformed
        context.close();
        System.exit(0);
    }//GEN-LAST:event_btnSALIRActionPerformed

    private void btnCREARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCREARActionPerformed
        if (COD_EMPLEADO_field.getText().trim().isEmpty() || NOM_USUARIO_field.getText().trim().isEmpty() || EMAIL_field.getText().trim().isEmpty() || PRIMER_NOMBRE_field.getText().trim().isEmpty() || PRIMER_APELLIDO_field.getText().trim().isEmpty() || SEGUNDO_APELLIDO_field.getText().trim().isEmpty() || DNI_field.getText().trim().isEmpty() || CARGO_field.getText().trim().isEmpty() || COD_DEPARTAMENTO_field.getText().trim().isEmpty() || NOM_DEPARTAMENTO_field.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "¡Rellena todos los campos!");
        } else {
            try {
                Usuario u1 = new Usuario(COD_EMPLEADO_field.getText(), NOM_USUARIO_field.getText(), EMAIL_field.getText(), PRIMER_NOMBRE_field.getText(), SEGUNDO_NOMBRE_field.getText(), PRIMER_APELLIDO_field.getText(), SEGUNDO_APELLIDO_field.getText(), DNI_field.getText(), CARGO_field.getText(), COD_DEPARTAMENTO_field.getText(), NOM_DEPARTAMENTO_field.getText());
        
                service.crear(u1);
        
                JOptionPane.showMessageDialog(this, "¡Registro creado con éxito!");
                
                queryReset();
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "ERROR: " + e.getMessage());
            }
        }
        DefaultTableModel model = (DefaultTableModel) tablaEMPLEADOS.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_btnCREARActionPerformed

    private void btnCONSULTARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCONSULTARActionPerformed
 
        try {
            Usuario usuario = new Usuario();
            usuario.setCodEmpleado(COD_EMPLEADO_field.getText().trim());
            usuario.setPrimerNombre(PRIMER_NOMBRE_field.getText().trim());
            usuario.setSegundoNombre(SEGUNDO_NOMBRE_field.getText().trim());
            usuario.setPrimerApellido(PRIMER_APELLIDO_field.getText().trim());
            usuario.setSegundoApellido(SEGUNDO_APELLIDO_field.getText().trim());
            usuario.setNomUsuario(NOM_USUARIO_field.getText().trim());
            usuario.setEmail(EMAIL_field.getText().trim());
            usuario.setDni(DNI_field.getText().trim());
            usuario.setCargo(CARGO_field.getText().trim());
            usuario.setCodDepartamento(COD_DEPARTAMENTO_field.getText().trim());
            usuario.setNomDepartamento(NOM_DEPARTAMENTO_field.getText().trim());
        
            List<Usuario> usuarios = service.consultar(usuario);
        
            DefaultTableModel model = (DefaultTableModel) tablaEMPLEADOS.getModel();
            model.setRowCount(0);
        
            for (Usuario u : usuarios) {
                model.addRow(new Object[]{
                    u.getId(), u.getCodEmpleado(), u.getDni(), u.getCargo(), u.getPrimerNombre(), u.getSegundoNombre(), u.getPrimerApellido(), u.getSegundoApellido(), u.getNomUsuario(), u.getEmail(), u.getCodDepartamento(), u.getNomDepartamento()
                });
            }
            tablaEMPLEADOS.setModel(model);    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR: " + e.getMessage());
        } 
    }//GEN-LAST:event_btnCONSULTARActionPerformed

    private void btnELIMINARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnELIMINARActionPerformed
        if (ID_field.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "¡El campo ID no puede estar vacío!");
        } else {
            try {
                service.eliminar(Integer.parseInt(ID_field.getText()));
                JOptionPane.showMessageDialog(this, "¡Registro eliminado con éxito!");

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "ERROR: " + e.getMessage());
            }
        }
        queryReset();
        DefaultTableModel model = (DefaultTableModel) tablaEMPLEADOS.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_btnELIMINARActionPerformed

    private void btnACTUALIZARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnACTUALIZARActionPerformed
        if (ID_field.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Seleccione un registro para actualizar.");
            return;
        }
        
        try {
            Usuario usuario = new Usuario();
            usuario.setId(Integer.parseInt(ID_field.getText()));
            usuario.setCodEmpleado(COD_EMPLEADO_field.getText());
            usuario.setDni(DNI_field.getText());
            usuario.setCargo(CARGO_field.getText());
            usuario.setPrimerNombre(PRIMER_NOMBRE_field.getText());
            usuario.setSegundoNombre(SEGUNDO_NOMBRE_field.getText());
            usuario.setPrimerApellido(PRIMER_APELLIDO_field.getText());
            usuario.setSegundoApellido(SEGUNDO_APELLIDO_field.getText());
            usuario.setNomUsuario(NOM_USUARIO_field.getText());
            usuario.setEmail(EMAIL_field.getText());
            usuario.setCodDepartamento(COD_DEPARTAMENTO_field.getText());
            usuario.setNomDepartamento(NOM_DEPARTAMENTO_field.getText());
        
            service.actualizar(usuario);
            JOptionPane.showMessageDialog(this, "¡Registro actualizado con éxito!");
        
            queryReset();
            DefaultTableModel model = (DefaultTableModel) tablaEMPLEADOS.getModel();
            model.setRowCount(0);    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR: " + e.getMessage());
        }
    }//GEN-LAST:event_btnACTUALIZARActionPerformed

    private void btnLIMPIARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLIMPIARActionPerformed
        queryReset();
        DefaultTableModel model = (DefaultTableModel) tablaEMPLEADOS.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_btnLIMPIARActionPerformed

    private void btnEXPORTARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEXPORTARActionPerformed
        JFileChooser fileChooser =  new JFileChooser();
        fileChooser.setDialogTitle("Guardar como");
        
        int seleccion = fileChooser.showSaveDialog(this);
        
        if(seleccion == JFileChooser.APPROVE_OPTION) {
            File archivo = fileChooser.getSelectedFile();
            exportTableToExcel(tablaEMPLEADOS, archivo.getAbsolutePath() + ".xlsx");
        }
    }//GEN-LAST:event_btnEXPORTARActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CARGO;
    private javax.swing.JTextField CARGO_field;
    private javax.swing.JLabel COD_DEPARTAMENTO;
    private javax.swing.JTextField COD_DEPARTAMENTO_field;
    private javax.swing.JLabel COD_EMPLEADO;
    private javax.swing.JTextField COD_EMPLEADO_field;
    private javax.swing.JLabel DNI;
    private javax.swing.JTextField DNI_field;
    private javax.swing.JLabel EMAIL;
    private javax.swing.JTextField EMAIL_field;
    private javax.swing.JTextField ID_field;
    private javax.swing.JLabel NOM_DEPARTAMENTO;
    private javax.swing.JTextField NOM_DEPARTAMENTO_field;
    private javax.swing.JLabel NOM_USUARIO;
    private javax.swing.JTextField NOM_USUARIO_field;
    private javax.swing.JLabel PRIMER_APELLIDO;
    private javax.swing.JTextField PRIMER_APELLIDO_field;
    private javax.swing.JLabel PRIMER_NOMBRE;
    private javax.swing.JTextField PRIMER_NOMBRE_field;
    private javax.swing.JLabel SEGUNDO_APELLIDO;
    private javax.swing.JTextField SEGUNDO_APELLIDO_field;
    private javax.swing.JLabel SEGUNDO_NOMBRE;
    private javax.swing.JTextField SEGUNDO_NOMBRE_field;
    private javax.swing.JButton btnACTUALIZAR;
    private javax.swing.JButton btnCONSULTAR;
    private javax.swing.JButton btnCREAR;
    private javax.swing.JButton btnELIMINAR;
    private javax.swing.JButton btnEXPORTAR;
    private javax.swing.JButton btnLIMPIAR;
    private javax.swing.JButton btnSALIR;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaEMPLEADOS;
    // End of variables declaration//GEN-END:variables
}
